CREATE TABLE IF NOT EXISTS "public"."games" (
  "id" bigint NOT NULL,
  "slug" "text" NOT NULL UNIQUE,
  "owner" "text" NOT NULL,
  "name" "text" NOT NULL,
  "summary" "text",
  "description" "text",
  "thumbnail_url" "text",
  "screenshots" "text"[] DEFAULT '{}'::"text"[] NOT NULL,
  "trailer_url" "text",
  "is_public" boolean DEFAULT false NOT NULL,
  "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
  "updated_at" timestamp with time zone
);

ALTER TABLE "public"."games" OWNER TO "postgres";
ALTER TABLE "public"."games" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
  SEQUENCE NAME "public"."games_id_seq"
  START WITH 1
  INCREMENT BY 1
  NO MINVALUE
  NO MAXVALUE
  CACHE 1
);

ALTER TABLE ONLY "public"."games"
  ADD CONSTRAINT "games_pkey" PRIMARY KEY ("id");

ALTER TABLE "public"."games" ENABLE ROW LEVEL SECURITY;

GRANT ALL ON TABLE "public"."games" TO "anon";
GRANT ALL ON TABLE "public"."games" TO "authenticated";
GRANT ALL ON TABLE "public"."games" TO "service_role";

CREATE POLICY "Allow read access for all users" ON "public"."games" FOR SELECT USING (true);

CREATE POLICY "Allow insert for authenticated users" ON public.games FOR INSERT
WITH CHECK (
  owner = ("auth"."jwt"() ->> 'wallet_address'::text)
  AND name != ''
  AND slug != ''
);

CREATE POLICY "Allow update for game owner" ON public.games FOR UPDATE
USING (
  owner = ("auth"."jwt"() ->> 'wallet_address'::text)
)
WITH CHECK (
  owner = ("auth"."jwt"() ->> 'wallet_address'::text)
  AND (name IS NULL OR (name != '' AND name = trim(name) AND LENGTH(name) <= 100))
  AND (slug IS NULL OR (slug != '' AND slug = trim(slug) AND LENGTH(slug) <= 100))
  AND id IS NULL
  AND created_at IS NULL
  AND updated_at IS NULL
);

CREATE POLICY "Allow delete for game owner" ON public.games FOR DELETE
USING (
  owner = ("auth"."jwt"() ->> 'wallet_address'::text)
);

CREATE TRIGGER "set_updated_at" BEFORE UPDATE ON "public"."games" FOR EACH ROW EXECUTE FUNCTION "public"."set_updated_at"();
