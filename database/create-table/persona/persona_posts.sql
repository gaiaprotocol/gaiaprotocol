CREATE TABLE IF NOT EXISTS "public"."persona_posts" (
  "id" bigint NOT NULL,
  "author" "text" NOT NULL,
  "title" "text" NOT NULL,
  "content" "text" NOT NULL,
  "rich" "jsonb",
  "reactions" "jsonb"[],
  "ip_address" "inet" NOT NULL,
  "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
  "edited_at" timestamp with time zone
);

ALTER TABLE "public"."persona_posts" OWNER TO "postgres";
ALTER TABLE "public"."persona_posts" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."persona_posts_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY "public"."persona_posts"
    ADD CONSTRAINT "persona_posts_pkey" PRIMARY KEY ("id");

ALTER TABLE "public"."persona_posts" ENABLE ROW LEVEL SECURITY;

GRANT ALL ON TABLE "public"."persona_posts" TO "anon";
GRANT ALL ON TABLE "public"."persona_posts" TO "authenticated";
GRANT ALL ON TABLE "public"."persona_posts" TO "service_role";

GRANT ALL ON SEQUENCE "public"."persona_posts_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."persona_posts_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."persona_posts_id_seq" TO "service_role";

CREATE POLICY "Allow read access for all users" ON public.persona_posts FOR SELECT USING (true);

CREATE POLICY "Allow update for post author" ON public.persona_posts FOR UPDATE
USING (author = ("auth"."jwt"() ->> 'wallet_address'::text))
WITH CHECK (
  length("title") <= 256 AND length("content") <= 40000
);

CREATE POLICY "Allow delete for post author" ON public.persona_posts FOR DELETE
USING (author = ("auth"."jwt"() ->> 'wallet_address'::text));
